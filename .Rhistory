2+3
6/3
log(12)
log(10)
sqrt(121)
x<-8+7
x
a<-c(1.8,4.5)
b<-c(1+2i,3-6i)
d<-c(23,44)
e<-vector("logical",length=5)
qt<-c("Time",24,"October",TRUE,3.33)
ab<-c(TRUE,24)
cd<-c(2.5,"May")
bar<-0:5
class(bar)
as.numeric(bar)
as.charcter(bar)
as.character(bar)
my_list<-list(22,"ab",TRUE,1+2i)
my_list
my_list[[3]]
my_list[3]
my_matrix<-matrix(1:6,nrow=3,ncol=2)
my_matrix
my_matrix[,2]
my_matrix[,1]
my_matrix[2,]
my_matrix[1,]
age<-c(23,44,15,12,31,16)
age
dim(age)<-c(2,3)
age
[,1][,2][,3]
class(age)
x<-c(1,2,3,4,5,6)
y<-c(20,30,40,50,60)
cbind(x,y)
x y
df<-data.frame(name=c("ash","jane","paul","mark"),score=c(67,56,87,91))
df
dim(df)
str(df)
nrow(df)
ncol(df)
df[1:2,2]<-NA
df
is.na(df)
table(is.na(df))
mean(df$score)
mean(df$score,na.rm=TRUE)
new_df<-na.omit(df)
new_df
# Polynomial Regression
# Importing the dataset
dataset = read.csv('anomaly.csv')
dataset = dataset[1:2]
# Splitting the dataset into the Training set and Test set
# # install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$Salary, SplitRatio = 2/3)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Annual.Anomaly ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Year2 = dataset$Year^2
dataset$Year3 = dataset$Year^3
dataset$Year4 = dataset$Year^4
poly_reg = lm(formula = Annual.Anomaly ~ .,
data = dataset)
# Visualising the Linear Regression results
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp anomaly (Linear Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Visualising the Polynomial Regression results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp Anomaly (Polynomial Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Visualising the Regression Model results (for higher resolution and smoother curve)
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Year), max(dataset$Annual.Anomaly), 0.1)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Year = x_grid,
Year2 = x_grid^2,
Year3 = x_grid^3,
Year4 = x_grid^4))),
colour = 'blue') +
ggtitle('Temp Anomaly (Polynomial Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Predicting a new result with Linear Regression
predict(lin_reg, data.frame(Level = 6.5))
# Predicting a new result with Polynomial Regression
predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
setwd("~/theModeling")
# Polynomial Regression
# Importing the dataset
dataset = read.csv('anomaly.csv')
dataset = dataset[1:2]
# Splitting the dataset into the Training set and Test set
# # install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$Salary, SplitRatio = 2/3)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Annual.Anomaly ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Year2 = dataset$Year^2
dataset$Year3 = dataset$Year^3
dataset$Year4 = dataset$Year^4
poly_reg = lm(formula = Annual.Anomaly ~ .,
data = dataset)
# Visualising the Linear Regression results
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp anomaly (Linear Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Visualising the Polynomial Regression results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp Anomaly (Polynomial Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Visualising the Regression Model results (for higher resolution and smoother curve)
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Year), max(dataset$Annual.Anomaly), 0.1)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Year = x_grid,
Year2 = x_grid^2,
Year3 = x_grid^3,
Year4 = x_grid^4))),
colour = 'blue') +
ggtitle('Temp Anomaly (Polynomial Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Predicting a new result with Linear Regression
predict(lin_reg, data.frame(Level = 6.5))
# Predicting a new result with Polynomial Regression
predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
# Polynomial Regression
# Importing the dataset
dataset = read.csv('anomaly.csv')
dataset = dataset[1:2]
# Splitting the dataset into the Training set and Test set
# # install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$Salary, SplitRatio = 2/3)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Annual.Anomaly ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Year2 = dataset$Year^2
dataset$Year3 = dataset$Year^3
dataset$Year4 = dataset$Year^4
poly_reg = lm(formula = Annual.Anomaly ~ .,
data = dataset)
# Visualising the Linear Regression results
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp anomaly (Linear Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Visualising the Polynomial Regression results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp Anomaly (Polynomial Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
"""
# Visualising the Regression Model results (for higher resolution and smoother curve)
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Year), max(dataset$Annual.Anomaly), 0.1)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Year = x_grid,
Year2 = x_grid^2,
Year3 = x_grid^3,
Year4 = x_grid^4))),
colour = 'blue') +
ggtitle('Temp Anomaly (Polynomial Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Predicting a new result with Linear Regression
predict(lin_reg, data.frame(Level = 6.5))
# Predicting a new result with Polynomial Regression
predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp anomaly (Linear Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Visualising the Polynomial Regression results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp Anomaly (Polynomial Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
"""
# Polynomial Regression
# Importing the dataset
dataset = read.csv('anomaly.csv')
dataset = dataset[1:2]
# Splitting the dataset into the Training set and Test set
# # install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$Salary, SplitRatio = 2/3)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Annual.Anomaly ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Year2 = dataset$Year^2
dataset$Year3 = dataset$Year^3
dataset$Year4 = dataset$Year^4
poly_reg = lm(formula = Annual.Anomaly ~ .,
data = dataset)
# Visualising the Linear Regression results
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp anomaly (Linear Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Visualising the Polynomial Regression results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp Anomaly (Polynomial Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Predicting a new result with Linear Regression
predict(lin_reg, data.frame(Level = 6.5))
# Predicting a new result with Polynomial Regression
predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
# Polynomial Regression
# Importing the dataset
dataset = read.csv('anomaly.csv')
dataset = dataset[1:2]
# Splitting the dataset into the Training set and Test set
# # install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$Salary, SplitRatio = 2/3)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Annual.Anomaly ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Year2 = dataset$Year^2
dataset$Year3 = dataset$Year^3
dataset$Year4 = dataset$Year^4
poly_reg = lm(formula = Annual.Anomaly ~ .,
data = dataset)
# Visualising the Linear Regression results
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp anomaly (Linear Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Visualising the Polynomial Regression results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Year, y = dataset$Annual.Anomaly),
colour = 'red') +
geom_line(aes(x = dataset$Year, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Temp Anomaly (Polynomial Regression)') +
xlab('Year') +
ylab('Annual Anomaly')
# Predicting a new result with Linear Regression
predict(lin_reg, data.frame(Year = 6.5))
# Predicting a new result with Polynomial Regression
predict(poly_reg, data.frame(Year = 6.5,
Year2 = 6.5^2,
Year3 = 6.5^3,
Year4 = 6.5^4))
View(dataset)
View(dataset)
